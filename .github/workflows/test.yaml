name: Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  python:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [windows-latest]
#        os: [ubuntu-latest, windows-latest]
        python-version: ["3.12"]
#        python-version: ["3.12", "3.13"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1.13.0
      - name: Set up CMake
        uses: lukka/get-cmake@v4.1.1
      - name: Install Mesa on Windows for headless Arcade
        if: matrix.os == 'windows-latest'
        uses: ssciwr/setup-mesa-dist-win@v2
      - name: Run Nox
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get update && sudo apt-get install libegl1
            export ARCADE_HEADLESS=1
          fi
          pipx run nox --error-on-missing-interpreters --stop-on-first-error -s tests-${{ matrix.python-version }}
      - name: Upload coverage report
        uses: coverallsapp/github-action@v2.3.6
        with:
          file: coverage.lcov
          flag-name: run-python-${{ matrix.os }}-${{ matrix.python-version }}
          parallel: true
  cpp:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
#        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1.13.0
      - name: Set up CMake
        uses: lukka/get-cmake@v4.1.1
      - name: Build CMake and run CTest
        working-directory: ${{ github.workspace }}/src/hades_engine
        run: |
          pip install conan
          cmake -DDO_PYTHON=OFF --preset Debug
          cmake --build build-debug
          ctest --output-on-failure --no-tests=error --test-dir ${{ github.workspace }}/src/hades_engine/build-debug/tests
      - name: Generate the coverage report
        if: matrix.os == 'ubuntu-latest'
        run: |
          pip install gcovr
          gcovr -r ${{ github.workspace }} --exclude src/hades_engine/build-debug --exclude src/hades_engine/tests --exclude src/hades_engine/src/binding.cpp --coveralls coverage.json
      - name: Upload coverage report
        if: matrix.os == 'ubuntu-latest'
        uses: coverallsapp/github-action@v2.3.6
        with:
          file: coverage.json
          flag-name: run-cpp-${{ matrix.os }}
          parallel: true
  finish:
    runs-on: ubuntu-latest
    needs: [python, cpp]
    steps:
      - name: Upload coverage report
        uses: coverallsapp/github-action@v2.3.6
        with:
          parallel-finished: true
